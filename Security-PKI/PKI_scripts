git clone https://bitbucket.org/stefanholek/pki-example-1

openssl req -new \
    -config etc/root-ca.conf \
    -out ca/root-ca.csr \
    -keyout ca/root-ca/private/root-ca.key
Generating a 2048 bit RSA private key


req -new \
    -config etc/root-ca.conf \
    -out ca/root-ca.csr \
    -keyout ca/root-ca/private/root-ca.key

openssl ca -selfsign \
    -config etc/root-ca.conf \
    -in ca/root-ca.csr \
    -out ca/root-ca.crt \
    -extensions root_ca_ext

mkdir -p ca/signing-ca/private ca/signing-ca/db crl certs
chmod 700 ca/signing-ca/private
cp /dev/null ca/signing-ca/db/signing-ca.db
cp /dev/null ca/signing-ca/db/signing-ca.db.attr
echo 01 > ca/signing-ca/db/signing-ca.crt.srl
echo 01 > ca/signing-ca/db/signing-ca.crl.srl


openssl req -new \
    -config etc/signing-ca.conf \
    -out ca/signing-ca.csr \
    -keyout ca/signing-ca/private/signing-ca.key

brew install apache2

SAN=DNS:www.tomcat.apache.org/ \ 
openssl req -new \
    -config etc/server.conf \
    -out certs/tomcat.apache.csr \
    -keyout certs/tomcat.apache.key


openssl ca \                   
    -config etc/signing-ca.conf \
    -in certs/apache.tomcat.org.csr \
    -out certs/apache.tomcat.org.crt \
    -extensions server_ext              
Using configuration from etc/signing-ca.conf
Enter pass phrase for ./ca/signing-ca/private/signing-ca.key:
Check that the request matches the signature
Signature ok



httpd.conf:

ServerName www.simple.org
<VirtualHost www.simple.org:443>
DocumentRoot /opt/homebrew/var/www
ServerName www.simple.org
SSLEngine ON
SSLCertificateFile /Users/ananya.aj5gmail.com/pki-example-1/certs/apache.tomcat.org.crt
SSLCertificateKeyFile /Users/ananya.aj5gmail.com/pki-example-1/certs/apache.tomocat.org.key
SSLCertificateChainFile /Users/ananya.aj5gmail.com/pki-example-1/ca/root-ca.crt
</VirtualHost>


LoadModule ssl_module lib/httpd/modules/mod_ssl.so


Listen 8080

/etc/hosts:

# Host Database
#
# localhost is used to configure the loopback interface
# when the system is booting.  Do not change this entry.
##
127.0.0.1       localhost
255.255.255.255 broadcasthost
::1             localhost
#67.188.178.148   www.simple.org
127.0.0.1       www.simple.org
# Added by Docker Desktop
# To allow the same kube context to work on the host and the container:
127.0.0.1 kubernetes.docker.internal
# End of section






openssl s_client -CApath /Users/ananya.aj5gmail.com/pki-example-1/ca -connect simple.org:443 -servername www.simple.org







